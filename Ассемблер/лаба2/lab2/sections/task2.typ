#v(0.3cm)

#set par(justify : true, first-line-indent: 2em)

Первая цифра задана в AX, вторая цифра задана в BX. Написать программу, которая выводит в одну строку первую цифру (AX), пробел, вторую цифру (BX). Далее совершает обмен значений регистров AX и BX и снова в новой строке на экране выводит в одну строку первую цифру (AX), пробел, вторую цифру (BX). Обмен совершить без использования дополнительной памяти (командой XCHG).

#align(center)[#image("task2.png")]
#text(size: 12pt, align(center)[Фото запуска второй программы])

```nasm
.model small
.stack 100h

.data 
Names db 'Grigorev Danya 251', 0Dh, 0Ah, '$'
enter db 0Dh, 0Ah, '$'

.code

start:
mov AX, @data
mov DS, AX

;адрес начала строки
mov DX, offset Names
call cout

mov AL, 7 ; занесение первой цифры в регистр AL
mov BL, 5 ; занесение второй цифры в регистр BL

push AX ; добавление AX в стек

mov DL, AL  ; переносим AL в DL, чтобы вывести символ в AL
add DL, 30h ; перевод цифры в символьную форму с помощью кода ASCII и команды ADD
call coutElem

mov DL, ' ' ; переносим AL в DL, чтобы вывести символ в AL
call coutElem

mov DL, BL  ; переносим BL в DL, чтобы вывести символ в BL
add DL, 30h ;перевод цифры в символьную форму с помощью кода ASCII и команды ADD
call coutElem

pop AX ; удаление AX из стека

XCHG AL, BL ; меняем местами AL и BL

mov DX, offset enter ;адрес начала строки
call cout

mov DL, AL  ; переносим AL в DL, чтобы вывести символ в AL
add DL, 30h ; перевод цифры в символьную форму с помощью кода ASCII и команды ADD
call coutElem

mov DL, ' ' ; переносим AL в DL, чтобы вывести символ в AL
call coutElem

mov DL, BL  ; переносим BL в DL, чтобы вывести символ в BL
add DL, 30h ; перевод цифры в символьную форму с помощью кода ASCII и команды ADD
call coutElem

mov AX,4C00h ; функция завершения программы 4Ch с кодом возврата 0
int 21h      ; вызов функции DOS

; вывод строки
cout proc
    mov AH, 09h ;Функция DOS 09h вывода на экран
    int 21h ;вызов функции DOS 09h
    ret ; возврат в точку вызова
cout endp

; вывод символа
coutElem proc
    mov AH, 02h ; номер функции вывода одного символа
    int 21h ;вызов функции 02h
    ret ; возврат в точку вызова
coutElem endp

end start


```
#text(size: 12pt, align(center)[Код второй программы])

#set text( 
  size: 11pt
)

#set table.hline(stroke: .6pt)

#table(
  // set text(1pt),
  columns: 13,
  stroke: none,
  inset: 2.5pt,
  align: center,
  table.hline(),
  table.header(
    [*Шаг*], 
    [*Машинный 
    \код*], 
    [*Команда*], 
    table.cell(colspan: 9, 
      
      [*Регистры*]
    ),
    [*Флаги*],
    table.hline(start: 3),
    [ ], [ ], [ ], [AX], [BX], [CX], [DX], [SP], [DS], [SS], [CS], [IP], [CZSOPAID],
  ),
  
   table.hline(),
  table.vline(x: 0),
  table.vline(x: 1),
  table.vline(x: 2),
  table.vline(x: 3),
  table.vline(x: 4, start: 1),
  table.vline(x: 5, start: 1),
  table.vline(x: 6, start: 1),
  table.vline(x: 7, start: 1),
  table.vline(x: 8, start: 1),
  table.vline(x: 9, start: 1),
  table.vline(x: 10, start: 1),
  table.vline(x: 11, start: 1),
  table.vline(x: 12 ),
  table.vline(x: 13),
  [1], [B8B348], [```nasm mov ax, 48B3```], 
  // регистры AX, BX, CX, DX
  [0000], [0000], [0000], [0000],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [489D], [48B5], [48AD],
  // регистр IP
  [0000],
  // флаги
  [00000010],
  table.hline(),
  [2], [8ED8], [```nasm mov dx, ax```], 
  // регистры AX, BX, CX, DX
  [48B3], [0000], [0000], [0000],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [489D], [48B5], [48AD],
  // регистр IP
  [0003],
  // флаги
  [00000010],
  table.hline(),
  [3], [BA0000], [```nasm mov dx, 0000```], 
  // регистры AX, BX, CX, DX
  [48B3], [0000], [0000], [0000],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0005],
  // флаги
  [00000010],
  table.hline(),
  [4], [E83D00], [```nasm call 0048```], 
  // регистры AX, BX, CX, DX
  [48B3], [0000], [0000], [0000],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0008],
  // флаги
  [00000010],
  table.hline(),
  [5], [B409], [```nasm mov ah, 09```], 
  // регистры AX, BX, CX, DX
  [48B3], [0000], [0000], [0000],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0048],
  // флаги
  [00000010],
  table.hline(),
  [6], [CD21], [```nasm int 21```], 
  // регистры AX, BX, CX, DX
  [09B3], [0000], [0000], [0000],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [004A],
  // флаги
  [00000010],
  table.hline(),
  [7], [C3], [```nasm ret```], 
  // регистры AX, BX, CX, DX
  [09B3], [0000], [0000], [0000],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [004C],
  // флаги
  [00000010],
  table.hline(),
  [8], [B007], [```nasm mov al, 07```], 
  // регистры AX, BX, CX, DX
  [09B3], [0000], [0000], [0000],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [000B],
  // флаги
  [00000010],
  table.hline(),
  [9], [B305], [```nasm mov bl, 05```], 
  // регистры AX, BX, CX, DX
  [0907], [0000], [0000], [0000],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [000D],
  // флаги
  [00000010],
  table.hline(),
  [10], [50], [```nasm push ax```], 
  // регистры AX, BX, CX, DX
  [0907], [0005], [0000], [0000],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [000F],
  // флаги
  [00000010],
  table.hline(),
  [11], [8AD0], [```nasm mov dl, al```], 
  // регистры AX, BX, CX, DX
  [0907], [0005], [0000], [0000],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0010],
  // флаги
  [00000010],
  table.hline(),
  [12], [80C230], [```nasm add dl, 30```], 
  // регистры AX, BX, CX, DX
  [0907], [0005], [0000], [0007],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0012],
  // флаги
  [00000010],
  table.hline(),
  [13], [E83500], [```nasm call 004D```], 
  // регистры AX, BX, CX, DX
  [0907], [0005], [0000], [0037],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0015],
  // флаги
  [00000010],
  table.hline(),
  [14], [B402], [```nasm mov ah, 02```], 
  // регистры AX, BX, CX, DX
  [0907], [0005], [0000], [0037],
  // регистр SP
  [00FC],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [004D],
  // флаги
  [00000010],
  table.hline(),
  [15], [CD21], [```nasm int 21```], 
  // регистры AX, BX, CX, DX
  [0207], [0005], [0000], [0037],
  // регистр SP
  [00FC],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [004F],
  // флаги
  [00000010],
  table.hline(),
  [16], [C3], [```nasm ret```], 
  // регистры AX, BX, CX, DX
  [0237], [0005], [0000], [0037],
  // регистр SP
  [00FC],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0051],
  // флаги
  [00000010],
  table.hline(),
  [17], [B220], [```nasm mov dl, 20```], 
  // регистры AX, BX, CX, DX
  [0237], [0005], [0000], [0037],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0018],
  // флаги
  [00000010],
  table.hline(),
  [18], [E83000], [```nasm call 004D```], 
  // регистры AX, BX, CX, DX
  [0237], [0005], [0000], [0020],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [001A],
  // флаги
  [00000010],
  table.hline(),
  [19], [8AD3], [```nasm mov dl, bl```], 
  // регистры AX, BX, CX, DX
  [0220], [0005], [0000], [0020],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [001D],
  // флаги
  [00000010],
  table.hline(),
  [20], [80C230], [```nasm add dl, 30```], 
  // регистры AX, BX, CX, DX
  [0220], [0005], [0000], [0005],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [001F],
  // флаги
  [00000010],
  table.hline(),
  [21], [E82800], [```nasm call 004D```], 
  // регистры AX, BX, CX, DX
  [0220], [0005], [0000], [0035],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0022],
  // флаги
  [00001010],
  table.hline(),
  [22], [58], [```nasm pop ax```], 
  // регистры AX, BX, CX, DX
  [0235], [0005], [0000], [0035],
  // регистр SP
  [00FE],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0025],
  // флаги
  [00001010],
  table.hline(),
  [23], [86C3], [```nasm xchg bl, al```], 
  // регистры AX, BX, CX, DX
  [0907], [0005], [0000], [0035],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0026],
  // флаги
  [00001010],
  table.hline(),
  [24], [BA1400], [```nasm mov dx, 0015```], 
  // регистры AX, BX, CX, DX
  [0905], [0007], [0000], [0035],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0028],
  // флаги
  [00001010],
  table.hline(),
  [25], [E81A00], [```nasm call 0048```], 
  // регистры AX, BX, CX, DX
  [0905], [0007], [0000], [0015],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [002B],
  // флаги
  [00001010],
  table.hline(),
  [26], [8AD0], [```nasm mov dl, al```], 
  // регистры AX, BX, CX, DX
  [0905], [0007], [0000], [0015],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [002E],
  // флаги
  [00001010],
  table.hline(),
  [27], [80C230], [```nasm add dl, 30```], 
  // регистры AX, BX, CX, DX
  [0905], [0007], [0000], [0005],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0030],
  // флаги
  [00001010],
  table.hline(),
  [28], [E81700], [```nasm call 004D```], 
  // регистры AX, BX, CX, DX
  [0905], [0007], [0000], [0035],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0033],
  // флаги
  [00001010],
  table.hline(),
  [29], [B220], [```nasm mov dl, 20```], 
  // регистры AX, BX, CX, DX
  [0235], [0007], [0000], [0035],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0036],
  // флаги
  [00001010],
  table.hline(),
  [30], [E81200], [```nasm call 004D```], 
  // регистры AX, BX, CX, DX
  [0235], [0007], [0000], [0020],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0038],
  // флаги
  [00001010],
  table.hline(),
  [31], [8AD3], [```nasm mov dl, bl```], 
  // регистры AX, BX, CX, DX
  [0220], [0007], [0000], [0020],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [003B],
  // флаги
  [00001010],
  table.hline(),
  [32], [80C230], [```nasm add dl, 30```], 
  // регистры AX, BX, CX, DX
  [0220], [0007], [0000], [0007],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [003D],
  // флаги
  [00001010],
  table.hline(),
  [33], [E80A00], [```nasm call 004D```], 
  // регистры AX, BX, CX, DX
  [0220], [0007], [0000], [0037],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0040],
  // флаги
  [00000010],
  table.hline(),
  [34], [B8004C], [```nasm mov ax, 4C00```], 
  // регистры AX, BX, CX, DX
  [0237], [0007], [0000], [0037],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0043],
  // флаги
  [00000010],
  table.hline(),
  [35], [CD21], [```nasm int 21```], 
  // регистры AX, BX, CX, DX
  [4C00], [0007], [0000], [0037],
  // регистр SP
  [0100],
  // регистры DS, SS, CS
  [48B3], [48B5], [48AD],
  // регистр IP
  [0046],
  // флаги
  [00000010],
  table.hline(),
  [36], [CD21], [```nasm int 21```], 
  // регистры AX, BX, CX, DX
  [0192], [2110], [F670], [0BB2],
  // регистр SP
  [0106],
  // регистры DS, SS, CS
  [2110], [0192], [0000],
  // регистр IP
  [0000],
  // флаги
  [10100011],
  table.hline(),
  
)

#set text( 
  size: 14pt
)

#text(size: 12pt, align(center)[Таблица трассировки второй программы])
